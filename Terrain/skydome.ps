/////////////
// GLOBALS //
/////////////
cbuffer ColorBuffer
{
    float4 apexColor;
    float4 midColor1;
    float4 midColor2;
    float4 centerColor;
};


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float4 domePosition : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 SkyDomePixelShader(PixelInputType input) : SV_TARGET
{
    float height;
    float4 outputColor;


    // Determine the position on the sky dome where this pixel is located.
    height = input.domePosition.y;

    // The value ranges from -1.0f to +1.0f so change it to only positive values.
    if(height < 0.0)
    {
        height = 0.0f;
    }

    // Determine the gradient color based on the height of the pixel in the sky dome.
    if(height >= 0.5)
    {
        outputColor = lerp(midColor1, apexColor, (height - 0.5) * 2.0);
    }
    else if(height >= 0.25)
    {
        outputColor = lerp(midColor2, midColor1, (height - 0.25) * 4.0);
    }
    else
    {
        outputColor = lerp(centerColor, midColor2, height * 4.0);
    }

    return outputColor;
}
